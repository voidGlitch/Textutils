{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","id","href","title","type","defaultValue","onChange","event","setcolor","target","value","console","log","disabled","role","onClick","toggle","htmlFor","Textform","useState","text","settext","style","backgroundColor","theme","color","rows","placeholder","length","newText","toUpperCase","showalert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","newtext","split","join","filter","element","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","App","setmode","setalert","settheme","message","setTimeout","about","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.077ee30b.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  const handlechange = (event) => {\r\n    props.setcolor(event.target.value);\r\n    console.log(\"clicked in nav\" + event.target.value);\r\n  };\r\n\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      {/* `` are refer to as template liteal which help us to include js in a class just add ${} to use conditional redenring  */}\r\n      <div className=\"container-fluid\" id=\"nav\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link\" to=\"/home\"> */}\r\n              {/* <a className=\"nav-link\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a> */}\r\n              {/* </Link> */}\r\n            </li>\r\n\r\n            {/* <li className=\"nav-item\"> */}\r\n            {/* <Link className=\"nav-link\" to=\"/about\"> */}\r\n            {/* <a className=\"nav-link\" href=\"#\">\r\n                {props.about}\r\n              </a> */}\r\n            {/* </li> */}\r\n          </ul>\r\n          <form className=\"d-flex\">\r\n            <div className=\"container my-2\">\r\n              <select\r\n                className=\"form-select form-select-sm \"\r\n                aria-label=\".form-select-sm example\"\r\n                defaultValue=\"\"\r\n                onChange={handlechange}\r\n                id=\"theme\"\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Choose a Theme ...\r\n                </option>\r\n                <option value=\"green\">Green</option>\r\n                <option value=\"pink\">pink</option>\r\n                <option value=\"blue\">Blue</option>\r\n                <option value=\"default\">default</option>\r\n              </select>\r\n            </div>\r\n            <div\r\n              className={`form-check form-switch text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              } my-1`}\r\n            >\r\n              <input\r\n                className=\"form-check-input my-3\"\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggle}\r\n              />\r\n              <label\r\n                className=\"form-check-label mx-0 \"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                Enable {props.mode === \"light\" ? \"dark\" : \"light\"} mode\r\n              </label>\r\n            </div>\r\n\r\n            {/* \r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Search\r\n            </button> */}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\n// Navbar.propTypes = {\r\n//   title: PropTypes.string.isRequired,\r\n//   about: PropTypes.string,\r\n// };\r\n\r\n// Navbar.defaultProps = {\r\n//   title: \"set the title\",\r\n//   about: \"set the about text here\",\r\n// };\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Textform(props) {\r\n  const [text, settext] = useState(\"\");\r\n\r\n  const handleclicked = () => {\r\n    console.log(\"uppercase was clicked \" + text);\r\n    let newText = text.toUpperCase();\r\n    settext(newText);\r\n    props.showalert(\"Converted to uppercase !\", \"success\");\r\n  };\r\n  const handleloclicked = () => {\r\n    console.log(\"lowercase was clicked \" + text);\r\n    let newText = text.toLowerCase();\r\n    settext(newText);\r\n    props.showalert(\"Converted to lowercase !\", \"success\");\r\n  };\r\n  const handleclearclicked = () => {\r\n    console.log(\"clear was clicked \");\r\n    const newtext = \"\";\r\n    settext(newtext);\r\n    props.showalert(\"Text has been cleared !\", \"success\");\r\n  };\r\n  const removeExtraspace = () => {\r\n    console.log(\"Remove was used\");\r\n    let newtext = text.split(/[ ]+/);\r\n    settext(newtext.join(\" \")); //text having in the value /state + the text we type from ourselves\r\n    props.showalert(\"Extra spaces has been removed !\", \"success\");\r\n  };\r\n  const copytext = () => {\r\n    console.log(\"copy was used\");\r\n    var text = document.getElementById(\"mybox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    document.getSelection().removeAllRanges();\r\n    props.showalert(\"copied to clipboard !\", \"success\");\r\n  };\r\n  const handleonChange = (event) => {\r\n    console.log(\"Onchanged\");\r\n    settext(event.target.value); //text having in the value /state + the text we type from ourselves\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          backgroundColor:\r\n            props.mode === \"dark\" || props.theme === \"green\" || \"blue\" || \"pink\"\r\n              ? \"dark\"\r\n              : \"white\",\r\n          color: props.mode === \"dark\" ? \"white\" : \"#0f2b54\",\r\n        }}\r\n      >\r\n        <h1>{props.title}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"mybox\"\r\n            rows=\"8\"\r\n            onChange={handleonChange}\r\n            value={text}\r\n            placeholder=\"Type something...\"\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-2 my-1\"\r\n          onClick={handleclicked}\r\n          style={{\r\n            backgroundColor:\r\n              props.mode === \"dark\" ||\r\n              props.theme === \"green\" ||\r\n              \"blue\" ||\r\n              \"pink\"\r\n                ? `light${props.theme}`\r\n                : \"white\",\r\n            color: props.mode === \"dark\" ? \"white\" : \"#0f2b54\",\r\n          }}\r\n        >\r\n          convert to uppercase\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-2 my-1\"\r\n          onClick={handleloclicked}\r\n          style={{\r\n            backgroundColor:\r\n              props.mode === \"dark\" ||\r\n              props.theme === \"green\" ||\r\n              \"blue\" ||\r\n              \"pink\"\r\n                ? `light${props.theme || props.mode}`\r\n                : \"blue\",\r\n            color: props.mode === \"dark\" ? \"white\" : \"#0f2b54\",\r\n          }}\r\n        >\r\n          convert to Lowercase\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-2 my-1\"\r\n          onClick={handleclearclicked}\r\n          style={{\r\n            backgroundColor:\r\n              props.mode === \"dark\" ||\r\n              props.theme === \"green\" ||\r\n              \"blue\" ||\r\n              \"yellow\"\r\n                ? `light${props.theme}`\r\n                : \"white\",\r\n            color: props.mode === \"dark\" ? \"white\" : \"#0f2b54\",\r\n          }}\r\n        >\r\n          Clear text\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-2 my-1\"\r\n          onClick={copytext}\r\n          style={{\r\n            backgroundColor:\r\n              props.mode === \"dark\" ||\r\n              props.theme === \"green\" ||\r\n              \"blue\" ||\r\n              \"yellow\"\r\n                ? `light${props.theme}`\r\n                : \"white\",\r\n            color: props.mode === \"dark\" ? \"white\" : \"#0f2b54\",\r\n          }}\r\n        >\r\n          copy the text\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-2 my-1\"\r\n          onClick={removeExtraspace}\r\n          style={{\r\n            backgroundColor:\r\n              props.mode === \"dark\" ||\r\n              props.theme === \"green\" ||\r\n              \"blue\" ||\r\n              \"yellow\"\r\n                ? `light${props.theme}`\r\n                : \"white\",\r\n            color: props.mode === \"dark\" ? \"white\" : \"#0f2b54\",\r\n          }}\r\n        >\r\n          remove extra spaces\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{\r\n          backgroundColor:\r\n            props.mode === \"dark\" || props.theme === \"green\" || \"blue\" || \"pink\"\r\n              ? `dark`\r\n              : \"white\",\r\n          color: props.mode === \"dark\" ? \"white\" : \"#0f2b54\",\r\n        }}\r\n      >\r\n        <h1>Your Text Summary</h1>\r\n        <p\r\n          style={{\r\n            color:\r\n              text.length === 0\r\n                ? \"grey\"\r\n                : `${props.mode === \"dark\" ? \"white\" : \"black\"}`,\r\n          }}\r\n        >\r\n          {\r\n            text.split(\" \").filter((element) => {\r\n              return element.length !== 0;\r\n            }).length\r\n          }\r\n          words and {text.length} characters\r\n        </p>\r\n        <p\r\n          style={{\r\n            color:\r\n              text.length === 0\r\n                ? \"grey\"\r\n                : `${props.mode === \"dark\" ? \"white\" : \"black\"}`,\r\n          }}\r\n        >\r\n          {0.008 *\r\n            text.split(\" \").filter((element) => {\r\n              return element.length !== 0;\r\n            }).length}{\" \"}\r\n          minutes read\r\n        </p>\r\n        <h2>Preview</h2>\r\n        <p\r\n          style={{\r\n            color:\r\n              text.length === 0\r\n                ? \"grey\"\r\n                : `${props.mode === \"dark\" ? \"white\" : \"black\"}`,\r\n          }}\r\n        >\r\n          {text.length > 0\r\n            ? text\r\n            : \"Enter something in textarea to preview here\"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"50px\" }}>\r\n      {props.alert && (\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>{capitalize(props.alert.type)}! </strong>\r\n          {props.alert.msg}\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          ></button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport Textform from \"./components/Textform\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n  const [alert, setalert] = useState(null);\n  const [theme, settheme] = useState(\"white\");\n\n  const showalert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  };\n  const setcolor = (color) => {\n    // if (document.body.style.backgroundColor === \"blue\" || \"pink\" || \"green\") {\n    //   console.log(\"selected color \" + document.body.style.backgroundColor);\n    //   settheme(document.body.style.backgroundColor);\n    // }\n    if (mode === \"light\" && color === \"default\") {\n      color = \"white\";\n      settheme(color);\n      console.log(\"here color is \" + color);\n      document.body.style.backgroundColor = \"white\";\n    }\n    if (mode === \"dark\" && color === \"default\") {\n      color = \"#2e363e\";\n      settheme(color);\n      console.log(color);\n      document.body.style.backgroundColor = \"#2e363e\";\n    } else {\n      document.body.style.backgroundColor = color;\n    }\n  };\n\n  const toggle = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#2e363e\";\n      showalert(\"dark mode has been enabled\", \"success\");\n      document.title = \"Textutiles - Dark mode\";\n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showalert(\"light mode has been enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar\n        title=\"textutiles\"\n        about=\"about\"\n        mode={mode}\n        toggle={toggle}\n        theme={theme}\n        setcolor={setcolor}\n      />\n      <Alert alert={alert} />\n      {/* <Navbar /> */}\n      <div className=\"container my-3\">\n        {/* <Switch> */}\n        {/* <Route exact path=\"/\"> */}\n        {/* <Textform\n          title=\"Enter your text to analyse\"\n          mode={mode}\n          showalert={showalert}\n          theme={theme}\n        /> */}\n        {/* </Route> */}\n        {/* <Route exact path=\"/home\"> */}\n        <Textform\n          title=\"Enter your text to analyse\"\n          mode={mode}\n          showalert={showalert}\n          theme={theme}\n        />\n        {/* </Route> */}\n        {/* <Route exact path=\"/about\"> */}\n        {/* <About /> */}\n        {/* </Route> */}\n        {/* </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}